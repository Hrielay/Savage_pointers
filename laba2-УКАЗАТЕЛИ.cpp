/*****************************************************************************
*                      КАФЕДРА № 304 1 КУРС ИВТ                              *
*----------------------------------------------------------------------------*
* Project Type  : Win32 Console Application                                  *
* Project Name  : laba2-УКАЗАТЕЛИ                                            *
* File Name     : laba2-УКАЗАТЕЛИ.cpp                                        *
* Language      : C/C++                                                      *
* Programmer(s) : Порядина &  Великоцкая                                     *
* Modifyed By   :                                                            *
* Created       : 26/03/25                                                   *
* Last Revision : 2/04/25                                                    *
* Comment(s)    :       РАБОТА С ДВУМЕРНЫМИ МАССИВАМИ                        *
*                                ДИНАМИЧЕСКИМИ МАССИВАМИ                     *
*                                УКАЗАТЕЛЯМИ                                 *
******************************************************************************/

#include <iostream> 
#include <fstream> // запись и чтение файлов
using namespace std;

/*******************************************************************/
/*                П Р О Т О Т И П Ы    Ф У Н К Ц И Й               */
/*******************************************************************/

//ввод матрицы из файла
int vvod(int** matr     //двумерная матрица
       , int n          //строки
       , int m);        //столбцы

//вывод матрицы
void vyvod(int** matr   //двумерная матрица
    , int n        //строки
    , int m        //столбцы
    , int indMIN   //индекс строки с мин суммой
    , int indMAX);  //индекс строки с макс суммой

//нахождение суммы положительных чётных элементов и
//замена местами строк с мин и макс суммами
void f2(int** matr      //двумерная матрица
      , int n           //строки
      , int m           //столбцы
      , int indMIN      //индекс строки с мин суммой
      , int indMAX);    //индекс строки с макс суммой

/*******************************************************************/
/*               О С Н О В Н А Я     П Р О Г Р А М М А             */
/*******************************************************************/

int main() {
    setlocale(LC_ALL, "Russian");
    system("color F0");

    //инициализация переменных
    int indMIN = 0;// сохраняю индекс строки с мин суммой
    int indMAX = 0;//сохраняю индекс строки с макс суммой
    int n, m; //количество строк и столбцов матрицы
    int i = 0;
    int j = 0;

    //задаём размер матрицы
    cout << "Задайте размер матрицы: " << endl;
    cin >> n; //ввод количсетва строк
    cin >> m; //ввод количсетва столбцов
    //выделяем динамическую память под матрицу
    int** matr = new int* [n]; 

    //выделяем динамическую память под строки матрицы
    for (i = 0; i < n; ++i) {
        matr[i] = new int[m];
    }

    //вызов функций
    vvod(matr, n, m);
    vyvod(matr, n, m, indMIN, indMAX);
    f2(matr, n, m, indMIN,  indMAX);
    vyvod(matr, n, m, indMIN, indMAX);

    //освобождение динамической памяти под строки
    for (i = 0; i < n; i++) 
        delete[] matr[i];

    //освобождение динамической памяти под матрицу
    delete[] matr;
    return 0;
}


/**************************************************************/
/*           Р Е А Л И З А Ц И Я   Ф У Н К Ц И Й              */
/**************************************************************/


int vvod(int** matr, int n, int m)
{
    ifstream infile("matrix.txt"); // открытие файла для ввода 

    if (!infile) {
        cout << "File can not be opened" << endl;
        return 1;
    }

    // заполнение матрицы считыванием из файла 
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            infile >> matr[i][j];
            //cout « matr[i][j] « "\t"; 
        }
    }
    infile.close();                // закрытие файла 
    cout << endl;
}

void vyvod(int** matr, int n, int m, int indMIN, int indMAX) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cout << matr[i][j] << "\t";
        }
        cout << endl;
    }
}

void f2(int** matr, int n, int m, int indMIN, int indMAX)
{

    int MIN = 10000; //минимально сумма строки
    int MAX = -1000; //максимальная сумма строки

    int c = 0;	   //здесь буду сохранять значение

    //нахождение суммы для положительных четных элементов каждой строки
    for (int i = 0; i < n; i++) //пока не закончатся строки
    {
        int summa = 0; //начальная сумма элементов строки 
        for (int j = 0; j < m; j++) //пока не закончатся столбцы
        {
            //проверка на чётность и положительность
            if (matr[i][j] >= 0 && matr[i][j] % 2 == 0)
            {
                summa += matr[i][j]; //прибавляем подходящий элемент
                if (MAX < summa) MAX = summa;
                if (MIN > summa) MIN = summa;

                //если эта сумма максимальна, то сохранем её индекс
                if (MAX == summa)
                {
                    indMAX = i;
                }

                //если эта сумма минимальна, то сохранем её индекс
                else if (MIN == summa)
                {
                    indMIN = i;
                }
            }
        }
        //ОТВЕТ НА ПЕРВЫЙ ПУНКТ!!!!!!
        cout << "Cумма положительных и четных элементов " 
            << i + 1 << " строки: " << summa << " ";
        cout << endl;
    }

    //вывод максимальной и минимальной сумм
    cout << MAX << endl; 
    cout << MIN << endl;

    cout << endl;

    //выод индекса строки с максимальной и минимальной суммами
    cout << indMAX << endl;
    cout << indMIN << endl;

    //замена местами строк с мин и макс суммами
    cout << "Пункт 2." << endl;
    for (int j = 0; j < m; j++)
    {
        c = matr[indMAX][j];
        matr[indMAX][j] = matr[indMIN][j];
        matr[indMIN][j] = c;
    }
}

